{
  "name": "Hidden Konami JS",
  "tagline": "A modified konami-js with custom input patterns obfuscated by hash to keep them and the easter egg function secret",
  "body": "Hidden Konami JS\r\n=========\r\n\r\n## tl;dr\r\n\r\nOn a keyboard?  Type: ````iamimpatient````.  On a touch device?  Tap four times.\r\n\r\nWhoa cool!  It did a thing!  That thing was hidden until just now, and you wouldn't have known what to do if I didn't tell you.  Sweet!\r\n\r\n## What\r\n\r\nThe original [konami-js](https://github.com/snaptortoise/konami-js) is a nice little library that lets you add a secret function to your website which is called when you type in the [Konami Code](https://en.wikipedia.org/wiki/Konami_Code)!  <kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">↑</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">↑</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">↓</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">↓</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">←</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">→</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">←</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">→</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">B</kbd><kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.2em 0.2em #ddd; -webkit-box-shadow: 0.1em 0.2em 0.2em #ddd; box-shadow: 0.1em 0.2em 0.2em #ddd; background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">A</kbd>\r\n\r\nI love using this to sneak little easter eggs into my projects, but I've always had a few complaints.\r\n* You can't customize the input pattern that reveals the secret\r\n* The correct input pattern and secret function are plainly visible in the page/js source, so they are easy to discover\r\n\r\nThis fork aims to solve these complaints by:\r\n* Enabling the customization of patterns\r\n* Hiding the desired input pattern and the secret function\r\n * Verifying a hash of the desired input pattern, not the pattern itself directly\r\n * The secret function is hidden in a new .js file, whose location is only revealed after the correct input is received\r\n\r\n## Why\r\n\r\nYou want your website to do something special, but you don't want it to be immediately obvious what the desired pattern is upon inspection of the source.  The only way to find the secret is to spread it by word of mouth! (or by finding the website owner and [buying a $5 wrench](https://xkcd.com/538/))\r\n\r\nUsing the MD5 hash is cheap and good enough for this.  It also comes with the added bonus of seeing if anyone cares about your secret enough to try and find a collision just to find an acceptable pattern!\r\n\r\n## Demo\r\n\r\nThere is a live demo over at https://rorosaurus.github.io/hidden-konami-js/\r\n\r\nCan you find all the secret input patterns?  Go ahead!  Open the developer tools!  Inspect the page source!  The only info you have is ````konami.js```` and something in the HTML document like:\r\n\r\n```\r\n<script>var easter_egg = new KeyKonami(\"0a75e752070ffe5ed283de6d81efb3db\", 20);</script>\r\n```\r\n\r\nSo you have an MD5 hash of the desired input pattern and it's length.  Not too much to go on.  So unless the site owner tells you something like:\r\n\r\n> Hey you should type 'hello' and see what happens.\r\n\r\nThen you are in a tough place, unless you want to start searching for MD5 collisions. :)\r\n\r\nHint: It becomes easy once you realize the demo site contents are public on the [GitHub pages branch](https://github.com/rorosaurus/hidden-konami-js/tree/gh-pages).  Of course, this project is **actually** useful on private webservers which don't allow visitors to view the directory contents. ;)\r\n\r\n## Generator\r\n\r\nOn the left sidebar of the demo site, I've created a quick tool to help you generate the values you'll need for setup!  Once you settle on a good input pattern, you can save the relevant values.  They are downloaded as a .txt for security reasons, but the file can be renamed and used as the .js file you'll use in step 3!\r\n\r\nNote: The Pattern String isn't needed, but I include it so you don't forget your pattern.  For keyboard input, the Pattern String is the [KeyboardEvent keyCode](http://www.w3schools.com/jsref/event_key_keycode.asp).  For touch input, the Pattern String is a comma separated string describing the swipes/taps.\r\n\r\n## Setup\r\n\r\n**Step 1:** First, you need to add the script to your page.  Make sure you add the MD5 script too!\r\n```\r\n<script type=\"text/javascript\" src=\"konami.js\"></script>\r\n<script type=\"text/javascript\" src=\"md5.min.js\"></script>\r\n```\r\n\r\n**Step 2:** Next, attach the easter egg to your site by adding the tag below to your HTML.  You'll need two of the generated values from earlier: the pattern hash and the pattern length.  Create a KeyKonami for a pattern that uses keyboard presses and use TouchKonami for a pattern that uses touch input.\r\n```\r\n<script>var easter_egg = new KeyKonami(\"pattern_hash\", pattern_length);</script>\r\n```\r\n\r\n**Step 3:** Finally, you need to create a new  ````js_filename.js```` file (or reuse the file you downloaded from my generator).  Create a function with the name that was generated - then add your easter egg code!  You're done!\r\n```\r\nfunction function_name(){\r\n    alert(\"Your secret code goes here!\");\r\n}\r\n```\r\n\r\n## Tips\r\n\r\n* You can use more than one easter egg, just make sure to use a different variable names!\r\n* We assume the .js file is in the same directory as the HTML file.  (You can probably modify the source to change that if necessary.)\r\n* I recommend storing information about the input patterns inside the .js files, so you don't forget the details a few months from now.\r\n * The generator automatically does  this for you.\r\n* Try daisy chaining these files together!  Build a breadcrumb trail by providing hints in each file for the next secret input pattern - turning your easter eggs into a literal easter egg hunt!\r\n\r\n## This is not secure\r\nNor is it meant to be.  Please **do not use this to secure anything actually important**.  This is just meant to be a simple way to make some dumb secret jokes on your website, which can (mostly) only be discovered or spread by word-of-mouth.  This does not actually protect anything and, as previously mentioned, can be defeated by a determined adversary.\r\n\r\n## Thanks\r\n\r\nOriginal konami-js repo: https://github.com/snaptortoise/konami-js\r\n\r\nMD5 library repo: https://github.com/blueimp/JavaScript-MD5\r\n\r\nLicensed under the MIT License (http://opensource.org/licenses/MIT)\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}